{% set version = '0.1-16' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ebnm
  version: {{ version|replace("-", "_") }}

source:

  git_url: https://github.com/stephenslab/ebnm
  git_tag: 5cf8b78fdeb9a48b1899b80be00af7fc9d8c62f0

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: testthat, knitr, rmarkdown, microbenchmark, numDeriv
requirements:
  build:
    - {{posix}}filesystem        # [win]
    - {{posix}}git
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-ashr >=2.2_2

  run:
    - r-base
    - r-ashr >=2.2_2

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('ebnm')"           # [not win]
    - "\"%R%\" -e \"library('ebnm')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/stephenslab/ebnm
  license: GPL (>=3)
  summary: 'Provides functions to fit the normal means problem using Empirical Bayes. The goal
    is for these functions to be simple, fast and stable. Currently two models are implemented:
    the point-normal and point-laplace priors. The point-normal is considerably faster.
    See functions ebnm_point_normal, ebnm_point_laplace.'

  license_family: GPL3

# The original CRAN metadata for this package was:

# Package: ebnm
# Encoding: UTF-8
# Type: Package
# Version: 0.1-16
# Date: 2018-10-11
# Title: Fit Empirical Bayes Normal Means Model
# Author: Matthew Stephens, Jason Willwerscheid
# Maintainer: Matthew Stephens <mstephens@uchicago.edu>
# Description: Provides functions to fit the normal means problem using Empirical Bayes. The goal is for these functions to be simple, fast and stable. Currently two models are implemented: the point-normal and point-laplace priors. The point-normal is considerably faster. See functions ebnm_point_normal, ebnm_point_laplace.
# License: GPL (>=3)
# LazyData: true
# NeedsCompilation: no
# Depends: R (>= 3.3.0)
# Imports: stats, ashr (>= 2.2-2)
# Suggests: testthat, knitr, rmarkdown, microbenchmark, numDeriv
# URL: https://github.com/stephenslab/ebnm
# BugReports: https://github.com/stephenslab/ebnm/issues
# RoxygenNote: 6.1.0.9000
# VignetteBuilder: knitr
# Remotes: stephens999/ashr

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
